import React, { useState } from 'react';
import { Box, IconButton, Slider, Tooltip } from '@mui/material';
import FitScreenIcon from '@mui/icons-material/FitScreen';
import RemoveIcon from '@mui/icons-material/Remove';
import AddIcon from '@mui/icons-material/Add';
import PanToolIcon from '@mui/icons-material/PanTool';
import SelectAllIcon from '@mui/icons-material/SelectAll';

const ZoomPanPanel = ({ onZoomIn, onZoomOut, onFitScreen, onTogglePanMode, isPanMode }) => {
  const [zoomValue, setZoomValue] = useState(50);

  const handleSliderChange = (event, newValue) => {
    setZoomValue(newValue);
    // Optional: invoke a zoom callback
  };

  return (
    <Box
      display="flex"
      alignItems="center"
      justifyContent="center"
      gap={1}
      p={1}
      borderTop="1px solid #ccc"
      bgcolor="#f8f8f8"
    >
      <Tooltip title="Fit to Screen">
        <IconButton onClick={onFitScreen}>
          <FitScreenIcon />
        </IconButton>
      </Tooltip>

      <Tooltip title="Zoom Out">
        <IconButton onClick={onZoomOut}>
          <RemoveIcon />
        </IconButton>
      </Tooltip>

      <Slider
        value={zoomValue}
        onChange={handleSliderChange}
        aria-labelledby="zoom-slider"
        sx={{ width: 150 }}
      />

      <Tooltip title="Zoom In">
        <IconButton onClick={onZoomIn}>
          <AddIcon />
        </IconButton>
      </Tooltip>

      <Tooltip title={isPanMode ? 'Selection Mode' : 'Pan Mode'}>
        <IconButton onClick={onTogglePanMode}>
          {isPanMode ? <SelectAllIcon /> : <PanToolIcon />}
        </IconButton>
      </Tooltip>
    </Box>
  );
};

export default ZoomPanPanel;

import React, { useState, useRef } from 'react';
import { Dialog } from 'primereact/dialog';
import ZoomPanPanel from './ZoomPanPanel'; // The one we created earlier
import Diag from './Diag'; // Your D3 visualization component

const DiagramDialog = ({ visible, onHide }) => {
  const [isPanMode, setIsPanMode] = useState(false);
  const diagRef = useRef(null); // assuming you can access methods in Diag via ref

  const handleZoomIn = () => {
    diagRef.current?.zoomIn?.();
  };

  const handleZoomOut = () => {
    diagRef.current?.zoomOut?.();
  };

  const handleFitScreen = () => {
    diagRef.current?.fitToScreen?.();
  };

  const handleTogglePanMode = () => {
    setIsPanMode(prev => !prev);
    diagRef.current?.togglePanMode?.();
  };

  const footer = (
    <ZoomPanPanel
      onZoomIn={handleZoomIn}
      onZoomOut={handleZoomOut}
      onFitScreen={handleFitScreen}
      onTogglePanMode={handleTogglePanMode}
      isPanMode={isPanMode}
    />
  );

  return (
    <Dialog
      header="Diagram View"
      visible={visible}
      style={{ width: '80vw' }}
      onHide={onHide}
      footer={footer}
      draggable={false}
      resizable={false}
    >
      <Diag ref={diagRef} />
    </Dialog>
  );
};

export default DiagramDialog;
