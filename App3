import React, { useState, useMemo } from 'react';
import { Grid, Box } from '@mui/material';
import HierarchicalFilter from './HierarchicalFilter';
import AdditionalFilter from './AdditionalFilter';
import SearchResults from './SearchResults';

const App = () => {
  // Sample API response data
  const apiResponse = {
    facetData: {
      "Table": {
        "count": 100,
        "assetNames": {
          "Cedar 2.0 Data Repository": {
            "count": 4,
            "dbNames": {
              "hypd_egrc_dw_cedar": {
                "count": 4,
                "rsrcNames": {
                  "resource1": { "count": 2 },
                  "resource2": { "count": 2 }
                }
              }
            }
          }
        }
      }
    },
    searchDaoList: [
      { id: 1, type: "Table", assetName: "Cedar 2.0 Data Repository", dbName: "hypd_egrc_dw_cedar", rsrcName: "resource1" },
      { id: 2, type: "Table", assetName: "Cedar 2.0 Data Repository", dbName: "hypd_egrc_dw_cedar", rsrcName: "resource2" },
      { id: 3, type: "Table", assetName: "Other Asset", dbName: "other_db", rsrcName: null },
    ],
    ownerDept: {
      "IT Risk Management": 10,
      "IT Security": 5
    }
  };

  const [selectedHierarchicalFacet, setSelectedHierarchicalFacet] = useState([]);
  const [filteredResults, setFilteredResults] = useState(apiResponse.searchDaoList);

  // Filter the data based on selected facets
  useMemo(() => {
    if (selectedHierarchicalFacet.length === 0) {
      setFilteredResults(apiResponse.searchDaoList);
      return;
    }

    const filteredData = apiResponse.searchDaoList.filter(item => {
      return selectedHierarchicalFacet.some(facetId => {
        const parts = facetId.split('|');
        
        // Check if this item matches any of the selected facets
        if (parts.length === 1) {
          // Type level selected
          return item.type === parts[0];
        } else if (parts.length === 2) {
          // AssetName level selected
          return item.type === parts[0] && item.assetName === parts[1];
        } else if (parts.length === 3) {
          // DbName level selected
          return item.type === parts[0] && item.assetName === parts[1] && item.dbName === parts[2];
        } else if (parts.length === 4) {
          // RsrcName level selected
          return item.type === parts[0] && 
                 item.assetName === parts[1] && 
                 item.dbName === parts[2] && 
                 item.rsrcName === parts[3];
        }
        return false;
      });
    });

    setFilteredResults(filteredData);
  }, [selectedHierarchicalFacet, apiResponse.searchDaoList]);

  return (
    <Box sx={{ 
      flexGrow: 1, 
      p: 3, 
      height: '100vh',
      backgroundColor: '#f5f5f5'
    }}>
      <Grid container spacing={3} sx={{ height: '100%' }}>
        {/* Filters Column */}
        <Grid item xs={2.4}>
          <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%', gap: 3 }}>
            <HierarchicalFilter 
              facetData={apiResponse.facetData} 
              title="Common Filter"
              selectedHierarchicalFacet={selectedHierarchicalFacet}
              setSelectedHierarchicalFacet={setSelectedHierarchicalFacet}
            />
            <AdditionalFilter 
              data={apiResponse.ownerDept} 
              title="Owner Department"
            />
          </Box>
        </Grid>

        {/* Results Column */}
        <Grid item xs={9.6}>
          <SearchResults 
            data={filteredResults} 
            selectedItems={selectedHierarchicalFacet}
          />
        </Grid>
      </Grid>
    </Box>
  );
};

export default App;
